"""
В поисках работы Вася решил оптимизировать свои старания следующим образом: он нашёл стороннюю библиотеку,
которая получает данные с сайта с вакансиями и возвращает в виде специфичного текста.
Вася сразу заметил несколько проблем этой библиотеки:
в тексте между конструкциями может быть ну очень много лишних пробелов, при этом никакой закономерности в количестве
пробелов нет, текст подаётся в виде одной строки, что делает его нечитабельным для пользователя, да и еще значения
полей отформатированы как попало!

Наш герой решает исправить эти проблемы алгоритмическим путём!

На вход подаются поля: Название поля: Значение поля. Они разделены между собой символом точки с запятой (;),
который ставится в конце каждой такой конструкции, и пробелами, причем побелов может быть неограниченное количество.

Вам необходимо извлечь каждое поле из строки, которая подаётся, и для необходимых полей обработать каждое значение поля
в соответствии с правилами, которые указаны ниже.

Ответ представить в виде словаря, у которого ключ - поле, а значение - обработанное значение поля. Этот словарь закодировать
в формат JSON.
Правила обработки значений полей

description: описание вакансии. Текст вакансии разделен на предложения. Все предложения разделены точкой и одним
пробелом (.). Необходимо первую букву каждого предложения сделать заглавной, а остальные - строчными.

salary: зарплата вакансии. Гарантируется, что в значении поля дано только некое число. Это число необходимо округлить
до 2 знаков после точки. Округление не банковское (например 3.333333 -> 3.33, 5 -> 5.00, 5.5555 -> 5.56).

key_phrase: главная фраза вакансии, отражающая всю её суть. Сделать все буквы значения заглавными, в конец добавить
восклицательный знак (!).

addition: дополнительная информация о компании. Сделать все буквы значения строчными, в начало и конец добавить две точки (..).

company_info: информация о компании. Вася решил, что в ней слишком много лишних скобочных конструкций.
Убрать из текста все скобочные конструкции (скобки ( и ) и то, что между ними).

key_skills: ключевые навыки, необходимые для вакансии. На сайте с вакансиями их разделяют не пробелом,
а элементом HTML &nbsp. При парсинге страницы в Python, текст получается нечитабельным. Замените все подстроки &nbsp на пробел.
Формат ввода

Первой строкой подаётся строка с полями (конструкции, разделенные точкой с запятой и пробелами).

Второй строкой подаются поля, значение которых необходимо обработать и добавить в ответ.
Поля разделены запятой с одним пробелом (,). Не гарантируется, что все поля, перечисленные во второй строке,
присутствуют в первой строке.

description: input. exAMPLE;   salary: 7.3535353535; key_skills: Example&nbspKey&nbspSkills;
description, salary

Формат вывода

В качестве ответа необходимо вывести на экран словарь формата ключ - поле, значение - обработанное значение поля.
Словарь должен быть закодирован в формат JSON.

{"description": "Input. Example", "salary": "7.35"}
"""

import json
import re

def filtr(value, i):
    match (value):
        case 'description':
            return '. '.join(list(map(lambda x:x.capitalize(), i.split('. '))))
        case 'salary':
            return f"{float(i):.2f}"
        case 'key_phrase':
            return i.upper() + '!'
        case 'addition':
            return '..' + i.lower() + '..'
        case 'company_info':
            return re.sub(r'\([\w\s()]*\)', r'  ', i)
        case 'key_skills':
            return i.replace('&nbsp', ' ')



text = input()
headings = input()
key_value_list = []
result = {}

parsed_text = text.split(';')
parsed_headings = headings.split(', ')

for i in parsed_text:
    key_value_list.append(i.split(':'))

for i in key_value_list:
    for idx, element in enumerate(i):
        i[idx] = element.strip()

for i in key_value_list:
    if i[0]:
        result[i[0]] = i[1]
slovar = {}
for i in parsed_headings:
    if i in result:
        slovar[i] = filtr(i, result[i])
print(json.dumps(slovar))