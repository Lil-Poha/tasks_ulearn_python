"""
На третий день работы Васе надоело в отделе кадров, и он пошёл к начальнику просить перевода в отдел разработки.
Его начальник, Александр Владиславович, открыл его программу для составления карточек и не читая инструкции стал
вводить туда неправильные данные. Естественно программа сломалась (попробуйте сами).
Васю похвалили за технический подход к решению рутинной задачи, но сказали, что в программе нужно закрыть дыры.

Допишите код из предыдущей задачи так, чтобы он не выдавал ошибок при некорректных данных:

    Название и описание не должны быть пустыми
    Числовые поля должны иметь возможность конвертироваться в int
    Bool поля должны принимать только да или нет
    Нижняя граница оклада должна быть не больше верхней границы оклада.
    Если это не так, то выводится фраза Нижняя граница оклада должна быть не больше верхней границы.
    Повторите ввод, и снова появляются поля для ввода нижней и верхней границы оклада.
    В случае если пользователь ввёл что-то неправильно, выводится фраза Данные некорректны, повторите ввод.
    И снова появляется поле для ввода, неправильно введённого свойства.

Формат ввода

Введите название вакансии: Программист
Введите описание вакансии: Хорошие знания C#, JavaScript(Опыт работы. Синтаксис. ООП)
Введите город для вакансии: Екатеринбург
Введите требуемый опыт работы (лет): 1
Введите нижнюю границу оклада вакансии: 40000
Введите верхнюю границу оклада вакансии: С#
Данные некорректны, повторите ввод
Введите верхнюю границу оклада вакансии: 350000
Нужен свободный график (да / нет): да
Является ли данная вакансия премиум-вакансией (да / нет): нет

Формат вывода

Программист
Описание: Хорошие знания C#, JavaScript(Опыт работы. Синтаксис. ООП)
Город: Екатеринбург
Требуемый опыт работы: 1 год
Средний оклад: 195000 рублей
Свободный график: да
Премиум-вакансия: нет
"""


import math

def oklad_staz(pop, version_1, version_2, version_3):
    if pop % 10 == 1 and pop % 100 != 11:
        return f'{str(pop)} {version_1}'
    elif (pop % 10 > 1 and pop % 10 < 5) and (pop % 100 < 10 or pop % 100 > 20):
        return f'{str(pop)} {version_2}'
    else:
        return f'{str(pop)} {version_3}'

def read_string(prompt):
    value = input(prompt).strip()
    while value == '':
        print("Данные некорректны, повторите ввод")
        value = input(prompt).strip()
    return value

def read_integer(prompt):
    while True:
        value = input(prompt).strip()
        if value.isdigit():
            return int(value)
        else:
            print("Данные некорректны, повторите ввод")

def read_boolean(prompt):
    while True:
        value = input(prompt).strip()
        if value == 'да' or value == 'нет':
            return value
        else:
            print("Данные некорректны, повторите ввод")

x = read_string(f'Введите название вакансии: ')
y = read_string('Введите описание вакансии: ')
z = read_string("Введите город для вакансии: ")
v = read_integer("Введите требуемый опыт работы (лет): ")
u = read_integer("Введите нижнюю границу оклада вакансии: ")
e = read_integer("Введите верхнюю границу оклада вакансии: ")
l = read_boolean("Нужен свободный график (да / нет): ")
k = read_boolean("Является ли данная вакансия премиум-вакансией (да / нет): ")


print(x)
print(f'Описание: {y}')
print(f'Город: {z}')

print(f'Требуемый опыт работы: {oklad_staz(v, "год", "года", "лет")}')
pop = math.floor((e + u) / 2)
print(f'Средний оклад: {oklad_staz(pop, "рубль", "рубля", "рублей")}')
print(f'Свободный график: {l}')
print(f'Премиум-вакансия: {k}')
